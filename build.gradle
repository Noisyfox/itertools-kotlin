/*
 * Copyright 2017 Noisyfox.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

group 'cn.noisyfox'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.2-2'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

apply plugin: 'kotlin'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "noisyfox"
            name "noisyfox"
            email "timemanager.rick@gmail.com"
        }
    }

    scm {
        url "https://github.com/Noisyfox/itertools-kotlin"
    }
}

// Create the publication with the pom configuration:
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId rootProject.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Your description of the lib')
                root.appendNode('name', rootProject.name)
                root.appendNode('url', 'https://github.com/Noisyfox/itertools-kotlin')
                root.children().last() + pomConfig
            }
        }
    }
}

def bintrayUser = ''
def bintrayApiKey = ''
if (project.rootProject.file('bintray.properties').exists()){
    Properties properties = new Properties()
    properties.load(project.rootProject.file('bintray.properties').newDataInputStream())

    bintrayUser = properties.getProperty('bintray.user')
    bintrayApiKey = properties.getProperty('bintray.apikey')
} else {
    bintrayUser = System.getenv('BINTRAY_USER')
    bintrayApiKey = System.getenv('BINTRAY_KEY')
}

bintray {
    user = bintrayUser
    key = bintrayApiKey
    publications = ['mavenJava']
    pkg {
        repo = 'fox'
        name = 'itertools-kotlin'
        version {
            name = project.version
//            desc = 'Gradle Bintray Plugin 1.0 final'
            released  = new Date()
//            vcsTag = '1.3.0'
//            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}
